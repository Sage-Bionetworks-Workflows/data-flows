# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = sagetasks
description = Python library for building ETL pipelines involving Synapse and data processing workflows
author = Bruno Grande
author_email = bruno.grande@sagebase.org
license = Apache-2.0
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/sage-Bionetworks-workflows/sagetasks
project_urls =
    Source = https://github.com/sage-Bionetworks-workflows/sagetasks
    Changelog = https://github.com/Sage-Bionetworks-Workflows/sagetasks/blob/main/CHANGELOG.md
    Tracker = https://github.com/Sage-Bionetworks-Workflows/sagetasks/issues
#   TODO: Update and uncomment links below
#    Documentation = https://pyscaffold.org/
#    Download = https://pypi.org/project/PyScaffold/#files

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
# TODO: Add relevant classifiers once the goal is clear
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

python_requires = >=3.8

# Updates here should be reflected in `docs/requirements.txt`
install_requires =
    prefect>=2.0
    synapseclient
    sevenbridges-python
    pandas
    typer
    rich

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install sagetasks[PDF]` like:
# PDF = ReportLab; RXP

# Dependencies for testing (used by tox and Pipenv)
testing =
    setuptools
    pytest
    pytest-cov
    pytest-mock

# Dependencies for development (used by Pipenv)
dev =
    pre-commit
    tox
    sphinx-rtd-theme
    black
    isort
    jupyterlab
    mypy
    types-requests

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = sagetasks.module:function
# For example:
# console_scripts =
#     fibonacci = sagetasks.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension
console_scripts =
    sagetasks = sagetasks.main:main_app

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov sagetasks --cov-report term-missing --cov-report xml
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.3
package = sagetasks
extensions =
    github_actions
    markdown
    no_skeleton
    pre_commit
